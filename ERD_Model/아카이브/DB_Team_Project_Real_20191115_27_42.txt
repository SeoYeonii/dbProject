-- 테이블 순서는 관계를 고려하여 한 번에 실행해도 에러가 발생하지 않게 정렬되었습니다.

-- CLASSES Table Create SQL
CREATE TABLE CLASSES
(
    `class_id`   INT(11)         NOT NULL, 
    `name`       VARCHAR(255)    NOT NULL, 
    `capacity`   INT(11)         NOT NULL, 
    `master_id`  INT(11)         NOT NULL, 
    PRIMARY KEY (class_id)
);

ALTER TABLE CLASSES COMMENT '과목 목록 테이블';


-- CLASSES Table Create SQL
CREATE TABLE LECTURES
(
    `lecture_id`  INT(11)         NOT NULL, 
    `name`        VARCHAR(255)    NOT NULL, 
    `start_time`  DATETIME        NOT NULL, 
    `end_time`    DATETIME        NOT NULL, 
    `class_id`    INT(11)         NOT NULL, 
    PRIMARY KEY (lecture_id)
);

ALTER TABLE LECTURES COMMENT '강의 목록 테이블';

ALTER TABLE LECTURES
    ADD CONSTRAINT FK_LECTURES_class_id_CLASSES_class_id FOREIGN KEY (class_id)
        REFERENCES CLASSES (class_id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- CLASSES Table Create SQL
CREATE TABLE USERS
(
    `user_id`   INT(11)         NOT NULL    AUTO_INCREMENT COMMENT '로그인 시 사용하는 이메일이 아닌, 1, 2, 3 이런 식으로 단순 증가하는 대체 키', 
    `email`     VARCHAR(255)    NOT NULL    COMMENT '로그인 시 사용하는 이메일 주소', 
    `password`  VARCHAR(255)    NOT NULL    COMMENT '로그인 시 사용하는 비밀번호 (암호화하지 않아도 무방)', 
    `type`      INT(11)         NOT NULL    COMMENT '0 : 학생 / 1 : 강사', 
    PRIMARY KEY (user_id)
);

ALTER TABLE USERS COMMENT '유저 목록 테이블';


-- CLASSES Table Create SQL
CREATE TABLE QUESTIONS
(
    `question_id`      INT(11)          NOT NULL, 
    `type`             INT(11)          NOT NULL    COMMENT '0 : 단답형 / 1 : 객관식', 
    `question`         VARCHAR(1023)    NOT NULL, 
    `bogi`             TEXT             NOT NULL    COMMENT '별도의 구분자를 넣어 사용해도 되고, attribute를 여러 개로 나눠도 됨', 
    `answer`           TEXT             NOT NULL, 
    `difficulty`       INT(4)           NOT NULL    COMMENT '타입 임의로 지정', 
    `real_difficulty`  INT(4)           NOT NULL    COMMENT '타입 임의로 지정', 
    `lecture_id`       INT(11)          NOT NULL, 
    PRIMARY KEY (question_id)
);

ALTER TABLE QUESTIONS COMMENT '강의 아이템 - 문항 테이블';

ALTER TABLE QUESTIONS
    ADD CONSTRAINT FK_QUESTIONS_lecture_id_LECTURES_lecture_id FOREIGN KEY (lecture_id)
        REFERENCES LECTURES (lecture_id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- CLASSES Table Create SQL
CREATE TABLE USER_CLASSES
(
    `role`      VARCHAR(255)    NOT NULL    COMMENT 'student / teacher', 
    `class_id`  INT(11)         NOT NULL, 
    `user_id`   INT(11)         NOT NULL, 
    PRIMARY KEY (class_id, user_id)
);

ALTER TABLE USER_CLASSES COMMENT '과목-유저 매핑 테이블';

ALTER TABLE USER_CLASSES
    ADD CONSTRAINT FK_USER_CLASSES_class_id_CLASSES_class_id FOREIGN KEY (class_id)
        REFERENCES CLASSES (class_id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE USER_CLASSES
    ADD CONSTRAINT FK_USER_CLASSES_user_id_USERS_user_id FOREIGN KEY (user_id)
        REFERENCES USERS (user_id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- CLASSES Table Create SQL
CREATE TABLE LECTURE_KEYWORDS
(
    `class_id`    INT(11)         NOT NULL, 
    `lecture_id`  INT(11)         NOT NULL, 
    `keyword`     VARCHAR(255)    NOT NULL, 
    `weight`      FLOAT           NOT NULL, 
    PRIMARY KEY (class_id, lecture_id)
);

ALTER TABLE LECTURE_KEYWORDS COMMENT '강의 키워드 테이블';

ALTER TABLE LECTURE_KEYWORDS
    ADD CONSTRAINT FK_LECTURE_KEYWORDS_class_id_CLASSES_class_id FOREIGN KEY (class_id)
        REFERENCES CLASSES (class_id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE LECTURE_KEYWORDS
    ADD CONSTRAINT FK_LECTURE_KEYWORDS_lecture_id_LECTURES_lecture_id FOREIGN KEY (lecture_id)
        REFERENCES LECTURES (lecture_id) ON DELETE RESTRICT ON UPDATE RESTRICT;


-- CLASSES Table Create SQL
CREATE TABLE QUESTION_KEYWORDS
(
    `question_id`    INT(11)         NOT NULL, 
    `keyword`        VARCHAR(255)    NOT NULL, 
    `lecture_id`     INT(11)         NOT NULL, 
    `score_portion`  INT(11)         NOT NULL, 
    PRIMARY KEY (question_id, lecture_id)
);

ALTER TABLE QUESTION_KEYWORDS COMMENT '문항 키워드 테이블';

ALTER TABLE QUESTION_KEYWORDS
    ADD CONSTRAINT FK_QUESTION_KEYWORDS_question_id_QUESTIONS_question_id FOREIGN KEY (question_id)
        REFERENCES QUESTIONS (question_id) ON DELETE RESTRICT ON UPDATE RESTRICT;

ALTER TABLE QUESTION_KEYWORDS
    ADD CONSTRAINT FK_QUESTION_KEYWORDS_lecture_id_LECTURES_lecture_id FOREIGN KEY (lecture_id)
        REFERENCES LECTURES (lecture_id) ON DELETE RESTRICT ON UPDATE RESTRICT;


